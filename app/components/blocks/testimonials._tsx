"use client"
/*
import { TestimonialsBlock } from "@/app/types/pages"

import "react-responsive-carousel/lib/styles/carousel.min.css"
// requires a loader
import { Carousel } from "react-responsive-carousel"

import { Icons } from "../icons"

export default function Testimonials({ data }: { data: TestimonialsBlock }) {
  return (
    <section className="mx-auto w-full max-w-[calc(100vw-3rem)] overflow-hidden p-6 pb-12 md:max-w-full  lg:max-w-7xl">
      <svg
        className="z-0 mx-auto flex size-16 flex-row justify-center self-center text-gray-200/50 dark:text-gray-700/40 sm:size-24"
        width="16"
        height="13"
        viewBox="0 0 16 13"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        aria-hidden="true"
      >
        <path
          d="M7.18079 9.25611C7.18079 10.0101 6.93759 10.6211 6.45119 11.0891C5.96479 11.5311 5.35039 11.7521 4.60799 11.7521C3.71199 11.7521 2.96958 11.4531 2.38078 10.8551C1.81758 10.2571 1.53598 9.39911 1.53598 8.28111C1.53598 7.08511 1.86878 5.91511 2.53438 4.77111C3.22559 3.60111 4.18559 2.67811 5.41439 2.00211L6.29759 3.36711C5.63199 3.83511 5.09439 4.35511 4.68479 4.92711C4.30079 5.49911 4.04479 6.16211 3.91679 6.91611C4.14719 6.81211 4.41599 6.76011 4.72319 6.76011C5.43999 6.76011 6.02879 6.99411 6.48959 7.46211C6.95039 7.93011 7.18079 8.52811 7.18079 9.25611ZM14.2464 9.25611C14.2464 10.0101 14.0032 10.6211 13.5168 11.0891C13.0304 11.5311 12.416 11.7521 11.6736 11.7521C10.7776 11.7521 10.0352 11.4531 9.44639 10.8551C8.88319 10.2571 8.60159 9.39911 8.60159 8.28111C8.60159 7.08511 8.93439 5.91511 9.59999 4.77111C10.2912 3.60111 11.2512 2.67811 12.48 2.00211L13.3632 3.36711C12.6976 3.83511 12.16 4.35511 11.7504 4.92711C11.3664 5.49911 11.1104 6.16211 10.9824 6.91611C11.2128 6.81211 11.4816 6.76011 11.7888 6.76011C12.5056 6.76011 13.0944 6.99411 13.5552 7.46211C14.016 7.93011 14.2464 8.52811 14.2464 9.25611Z"
          fill="currentColor"
        />
      </svg>

      <h2 className="mb-4 text-center text-4xl font-extrabold tracking-tight text-gray-900 dark:text-white">
        {data.title}
      </h2>
      <p className="mb-12 mt-1 text-center font-light text-gray-600 dark:text-gray-400 md:text-lg lg:text-xl">
        {data.description}
      </p>
      {data && data.testimonials && data.testimonials.length > 0 && (
        <Carousel
          infiniteLoop
          showIndicators={false}
          showThumbs={false}
          showStatus={false}
          showArrows={false}
          autoPlay
          interval={6000}
          renderArrowPrev={(onClickHandler, hasPrev, label) => (
            <div className="absolute -bottom-1 right-8 z-50">
              <Icons.chevronLeft
                className="size-8 text-gray-400 hover:text-gray-600 dark:text-white/60 hover:dark:text-white"
                onClick={onClickHandler}
              />
            </div>
          )}
          renderArrowNext={(onClickHandler, hasPrev, label) => (
            <div className="absolute -bottom-1 right-0 z-50">
              <Icons.chevronRight
                className="size-8 text-gray-400 hover:text-gray-600 dark:text-white/60 hover:dark:text-white"
                onClick={onClickHandler}
              />
            </div>
          )}
        >
          {data.testimonials.map((testimonial) => (
            <div className="w-full text-center" key={testimonial.id}>
              <p className="mt-1 text-2xl font-semibold tracking-wide text-blue-950 dark:text-teal-200">
                {testimonial.body}
              </p>
              <p className="text-md mt-8 font-semibold tracking-wide text-gray-900 dark:text-white">
                {testimonial.name}{" "}
                <span className="pl-2 font-light">
                  {" "}
                  | {testimonial.location}
                </span>
              </p>
            </div>
          ))}
        </Carousel>
      )}
    </section>
  )
}
*/